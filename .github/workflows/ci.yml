on:
  push:
    branches: [ main ]
  pull_request:

name: CI

env:
  # This is required to enable the web_sys clipboard API which egui_web uses
  # https://rustwasm.github.io/wasm-bindgen/api/web_sys/struct.Clipboard.html
  # https://rustwasm.github.io/docs/wasm-bindgen/web-sys/unstable-apis.html
  RUSTFLAGS: --cfg=web_sys_unstable_apis

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - run: sudo apt-get update; sudo apt-get install libgtk-3-dev
      - run: cargo test --all-features

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - run: rustup component add rustfmt; sudo apt-get update; sudo apt-get install libgtk-3-dev
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - run: rustup component add clippy; sudo apt-get update; sudo apt-get install libgtk-3-dev
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  license:
    name: License
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      # NOTE: Licensure uses an inconsistent newline style in version 0.3.*
      - run: cargo install licensure --version "0.2.1"
      - run: ~/.cargo/bin/licensure --project --check
